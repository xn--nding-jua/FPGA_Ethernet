--	Generated by Altera MegaWizard Launcher Utility version 1.0
--	************************************************************
--	THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
--	************************************************************
--	Copyright (C) 1991-2025 Altera Corporation
--	Any megafunction design, and related net list (encrypted or decrypted),
--	support information, device programming or simulation file, and any other
--	associated documentation or information provided by Altera or a partner
--	under Altera's Megafunction Partnership Program may be used only to
--	program PLD devices (but not masked PLD devices) from Altera.  Any other
--	use of such megafunction design, net list, support information, device
--	programming or simulation file, or any other related documentation or
--	information is prohibited for any other purpose, including, but not
--	limited to modification, reverse engineering, de-compiling, or use with
--	any other silicon devices, unless such use is explicitly licensed under
--	a separate agreement with Altera or a megafunction partner.  Title to
--	the intellectual property, including patents, copyrights, trademarks,
--	trade secrets, or maskworks, embodied in any such megafunction design,
--	net list, support information, device programming or simulation file, or
--	any other related documentation or information provided by Altera or a
--	megafunction partner, remains with Altera, the megafunction partner, or
--	their respective licensors.  No other licenses, including any licenses
--	needed under any third party's intellectual property, are provided herein.

ENTITY IFI_MAC IS 
	PORT (
		clk	:  IN STD_LOGIC;
		clrn	:  IN STD_LOGIC;
		clk125	:  IN STD_LOGIC;
		RX_CLK	:  IN STD_LOGIC;
		RX_DV	:  IN STD_LOGIC;
		TX_EN	:  OUT STD_LOGIC;
		MDC	:  OUT STD_LOGIC;
		MDIO	:  INOUT STD_LOGIC;
		TXD	:  OUT STD_LOGIC_VECTOR (3 DOWNTO 0);
		RXD	:  IN STD_LOGIC_VECTOR (3 DOWNTO 0);
		RX_ER	:  IN STD_LOGIC;
		TX_ER	:  OUT STD_LOGIC;
		TX_CLK	:  IN STD_LOGIC;
		mGMAC_we	:  OUT STD_LOGIC;
		mGMAC_rd	:  OUT STD_LOGIC;
		mGMAC_be	:  OUT STD_LOGIC_VECTOR (3 DOWNTO 0);
		mGMAC_D	:  IN STD_LOGIC_VECTOR (31 DOWNTO 0);
		mGMAC_A	:  OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
		mGMAC_Q	:  OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
		mGMAC_waitrequest	:  IN STD_LOGIC;
		mGMAC_readdatavalid	:  IN STD_LOGIC;
		sGMAC_cs	:  IN STD_LOGIC;
		sGMAC_we	:  IN STD_LOGIC;
		sGMAC_rd	:  IN STD_LOGIC;
		sGMAC_be	:  IN STD_LOGIC_VECTOR (3 DOWNTO 0);
		sGMAC_D	:  IN STD_LOGIC_VECTOR (31 DOWNTO 0);
		sGMAC_Q	:  OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
		sGMAC_waitrequest	:  OUT STD_LOGIC;
		sGMAC_A	:  IN STD_LOGIC_VECTOR (11 DOWNTO 0);
		sGMAC_INT	:  OUT STD_LOGIC;
	);
END IFI_MAC;
