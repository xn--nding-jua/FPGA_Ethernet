// PHY_AES50B_0002.v

// This file was auto-generated from altera_eth_tse_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 13.1 182 at 2024.12.29.22:38:29

`timescale 1 ps / 1 ps
module PHY_AES50B_0002 (
		input  wire        clk,               //        control_port_clock_connection.clk
		input  wire        reset,             //                     reset_connection.reset
		output wire [31:0] readdata,          //                         control_port.readdata
		input  wire        read,              //                                     .read
		input  wire [31:0] writedata,         //                                     .writedata
		input  wire        write,             //                                     .write
		output wire        waitrequest,       //                                     .waitrequest
		input  wire [7:0]  address,           //                                     .address
		input  wire        rx_afull_clk,      // receive_fifo_status_clock_connection.clk
		input  wire [1:0]  rx_afull_data,     //                  receive_fifo_status.data
		input  wire        rx_afull_valid,    //                                     .valid
		input  wire [0:0]  rx_afull_channel,  //                                     .channel
		output wire        mac_rx_clk_0,      //            mac_rx_clock_connection_0.clk
		output wire        mac_tx_clk_0,      //            mac_tx_clock_connection_0.clk
		output wire [7:0]  data_rx_data_0,    //                            receive_0.data
		output wire        data_rx_eop_0,     //                                     .endofpacket
		output wire [4:0]  data_rx_error_0,   //                                     .error
		input  wire        data_rx_ready_0,   //                                     .ready
		output wire        data_rx_sop_0,     //                                     .startofpacket
		output wire        data_rx_valid_0,   //                                     .valid
		input  wire [7:0]  data_tx_data_0,    //                           transmit_0.data
		input  wire        data_tx_eop_0,     //                                     .endofpacket
		input  wire        data_tx_error_0,   //                                     .error
		output wire        data_tx_ready_0,   //                                     .ready
		input  wire        data_tx_sop_0,     //                                     .startofpacket
		input  wire        data_tx_valid_0,   //                                     .valid
		output wire [4:0]  pkt_class_data_0,  //                receive_packet_type_0.data
		output wire        pkt_class_valid_0, //                                     .valid
		input  wire        tx_crc_fwd_0,      //                mac_misc_connection_0.export
		input  wire        tx_clk_0,          //        pcs_mac_tx_clock_connection_0.clk
		input  wire        rx_clk_0,          //        pcs_mac_rx_clock_connection_0.clk
		input  wire        set_10_0,          //              mac_status_connection_0.set_10
		input  wire        set_1000_0,        //                                     .set_1000
		output wire        eth_mode_0,        //                                     .eth_mode
		output wire        ena_10_0,          //                                     .ena_10
		input  wire [7:0]  gm_rx_d_0,         //                mac_gmii_connection_0.gmii_rx_d
		input  wire        gm_rx_dv_0,        //                                     .gmii_rx_dv
		input  wire        gm_rx_err_0,       //                                     .gmii_rx_err
		output wire [7:0]  gm_tx_d_0,         //                                     .gmii_tx_d
		output wire        gm_tx_en_0,        //                                     .gmii_tx_en
		output wire        gm_tx_err_0,       //                                     .gmii_tx_err
		input  wire [3:0]  m_rx_d_0,          //                 mac_mii_connection_0.mii_rx_d
		input  wire        m_rx_en_0,         //                                     .mii_rx_dv
		input  wire        m_rx_err_0,        //                                     .mii_rx_err
		output wire [3:0]  m_tx_d_0,          //                                     .mii_tx_d
		output wire        m_tx_en_0,         //                                     .mii_tx_en
		output wire        m_tx_err_0,        //                                     .mii_tx_err
		output wire        mdc,               //                  mac_mdio_connection.mdc
		input  wire        mdio_in,           //                                     .mdio_in
		output wire        mdio_out,          //                                     .mdio_out
		output wire        mdio_oen           //                                     .mdio_oen
	);

	wire         avalon_arbiter_av_mac_master_0_waitrequest; // i_tse_fifoless_mac_0:reg_busy -> avalon_arbiter:mac_waitrequest_0
	wire  [31:0] avalon_arbiter_av_mac_master_0_writedata;   // avalon_arbiter:mac_writedata_0 -> i_tse_fifoless_mac_0:reg_data_in
	wire   [7:0] avalon_arbiter_av_mac_master_0_address;     // avalon_arbiter:mac_address_0 -> i_tse_fifoless_mac_0:reg_addr
	wire         avalon_arbiter_av_mac_master_0_write;       // avalon_arbiter:mac_write_0 -> i_tse_fifoless_mac_0:reg_wr
	wire         avalon_arbiter_av_mac_master_0_read;        // avalon_arbiter:mac_read_0 -> i_tse_fifoless_mac_0:reg_rd
	wire  [31:0] avalon_arbiter_av_mac_master_0_readdata;    // i_tse_fifoless_mac_0:reg_data_out -> avalon_arbiter:mac_readdata_0
	wire         channel_adapter_channel_out_0_valid;        // channel_adapter:rx_afull_valid_out_0 -> i_tse_fifoless_mac_0:rx_afull_valid
	wire   [1:0] channel_adapter_channel_out_0_data;         // channel_adapter:rx_afull_data_out_0 -> i_tse_fifoless_mac_0:rx_afull_data
	wire         rst_controller_reset_out_reset;             // rst_controller:reset_out -> channel_adapter:reset

	altera_eth_tse_avalon_arbiter #(
		.MAX_CHANNELS     (1),
		.MAC_ONLY         (1),
		.SLAVE_ADDR_WIDTH (8)
	) avalon_arbiter (
		.clk                (clk),                                        //             clk.clk
		.reset              (reset),                                      //           reset.reset
		.readdata           (readdata),                                   //        av_slave.readdata
		.read               (read),                                       //                .read
		.writedata          (writedata),                                  //                .writedata
		.write              (write),                                      //                .write
		.waitrequest        (waitrequest),                                //                .waitrequest
		.address            (address),                                    //                .address
		.mac_address_0      (avalon_arbiter_av_mac_master_0_address),     // av_mac_master_0.address
		.mac_readdata_0     (avalon_arbiter_av_mac_master_0_readdata),    //                .readdata
		.mac_read_0         (avalon_arbiter_av_mac_master_0_read),        //                .read
		.mac_writedata_0    (avalon_arbiter_av_mac_master_0_writedata),   //                .writedata
		.mac_write_0        (avalon_arbiter_av_mac_master_0_write),       //                .write
		.mac_waitrequest_0  (avalon_arbiter_av_mac_master_0_waitrequest), //                .waitrequest
		.pcs_address_0      (),                                           //     (terminated)
		.pcs_readdata_0     (16'b0000000000000000),                       //     (terminated)
		.pcs_read_0         (),                                           //     (terminated)
		.pcs_writedata_0    (),                                           //     (terminated)
		.pcs_write_0        (),                                           //     (terminated)
		.pcs_waitrequest_0  (1'b0),                                       //     (terminated)
		.mac_address_1      (),                                           //     (terminated)
		.mac_readdata_1     (32'b00000000000000000000000000000000),       //     (terminated)
		.mac_read_1         (),                                           //     (terminated)
		.mac_writedata_1    (),                                           //     (terminated)
		.mac_write_1        (),                                           //     (terminated)
		.mac_waitrequest_1  (1'b0),                                       //     (terminated)
		.pcs_address_1      (),                                           //     (terminated)
		.pcs_readdata_1     (16'b0000000000000000),                       //     (terminated)
		.pcs_read_1         (),                                           //     (terminated)
		.pcs_writedata_1    (),                                           //     (terminated)
		.pcs_write_1        (),                                           //     (terminated)
		.pcs_waitrequest_1  (1'b0),                                       //     (terminated)
		.mac_address_2      (),                                           //     (terminated)
		.mac_readdata_2     (32'b00000000000000000000000000000000),       //     (terminated)
		.mac_read_2         (),                                           //     (terminated)
		.mac_writedata_2    (),                                           //     (terminated)
		.mac_write_2        (),                                           //     (terminated)
		.mac_waitrequest_2  (1'b0),                                       //     (terminated)
		.pcs_address_2      (),                                           //     (terminated)
		.pcs_readdata_2     (16'b0000000000000000),                       //     (terminated)
		.pcs_read_2         (),                                           //     (terminated)
		.pcs_writedata_2    (),                                           //     (terminated)
		.pcs_write_2        (),                                           //     (terminated)
		.pcs_waitrequest_2  (1'b0),                                       //     (terminated)
		.mac_address_3      (),                                           //     (terminated)
		.mac_readdata_3     (32'b00000000000000000000000000000000),       //     (terminated)
		.mac_read_3         (),                                           //     (terminated)
		.mac_writedata_3    (),                                           //     (terminated)
		.mac_write_3        (),                                           //     (terminated)
		.mac_waitrequest_3  (1'b0),                                       //     (terminated)
		.pcs_address_3      (),                                           //     (terminated)
		.pcs_readdata_3     (16'b0000000000000000),                       //     (terminated)
		.pcs_read_3         (),                                           //     (terminated)
		.pcs_writedata_3    (),                                           //     (terminated)
		.pcs_write_3        (),                                           //     (terminated)
		.pcs_waitrequest_3  (1'b0),                                       //     (terminated)
		.mac_address_4      (),                                           //     (terminated)
		.mac_readdata_4     (32'b00000000000000000000000000000000),       //     (terminated)
		.mac_read_4         (),                                           //     (terminated)
		.mac_writedata_4    (),                                           //     (terminated)
		.mac_write_4        (),                                           //     (terminated)
		.mac_waitrequest_4  (1'b0),                                       //     (terminated)
		.pcs_address_4      (),                                           //     (terminated)
		.pcs_readdata_4     (16'b0000000000000000),                       //     (terminated)
		.pcs_read_4         (),                                           //     (terminated)
		.pcs_writedata_4    (),                                           //     (terminated)
		.pcs_write_4        (),                                           //     (terminated)
		.pcs_waitrequest_4  (1'b0),                                       //     (terminated)
		.mac_address_5      (),                                           //     (terminated)
		.mac_readdata_5     (32'b00000000000000000000000000000000),       //     (terminated)
		.mac_read_5         (),                                           //     (terminated)
		.mac_writedata_5    (),                                           //     (terminated)
		.mac_write_5        (),                                           //     (terminated)
		.mac_waitrequest_5  (1'b0),                                       //     (terminated)
		.pcs_address_5      (),                                           //     (terminated)
		.pcs_readdata_5     (16'b0000000000000000),                       //     (terminated)
		.pcs_read_5         (),                                           //     (terminated)
		.pcs_writedata_5    (),                                           //     (terminated)
		.pcs_write_5        (),                                           //     (terminated)
		.pcs_waitrequest_5  (1'b0),                                       //     (terminated)
		.mac_address_6      (),                                           //     (terminated)
		.mac_readdata_6     (32'b00000000000000000000000000000000),       //     (terminated)
		.mac_read_6         (),                                           //     (terminated)
		.mac_writedata_6    (),                                           //     (terminated)
		.mac_write_6        (),                                           //     (terminated)
		.mac_waitrequest_6  (1'b0),                                       //     (terminated)
		.pcs_address_6      (),                                           //     (terminated)
		.pcs_readdata_6     (16'b0000000000000000),                       //     (terminated)
		.pcs_read_6         (),                                           //     (terminated)
		.pcs_writedata_6    (),                                           //     (terminated)
		.pcs_write_6        (),                                           //     (terminated)
		.pcs_waitrequest_6  (1'b0),                                       //     (terminated)
		.mac_address_7      (),                                           //     (terminated)
		.mac_readdata_7     (32'b00000000000000000000000000000000),       //     (terminated)
		.mac_read_7         (),                                           //     (terminated)
		.mac_writedata_7    (),                                           //     (terminated)
		.mac_write_7        (),                                           //     (terminated)
		.mac_waitrequest_7  (1'b0),                                       //     (terminated)
		.pcs_address_7      (),                                           //     (terminated)
		.pcs_readdata_7     (16'b0000000000000000),                       //     (terminated)
		.pcs_read_7         (),                                           //     (terminated)
		.pcs_writedata_7    (),                                           //     (terminated)
		.pcs_write_7        (),                                           //     (terminated)
		.pcs_waitrequest_7  (1'b0),                                       //     (terminated)
		.mac_address_8      (),                                           //     (terminated)
		.mac_readdata_8     (32'b00000000000000000000000000000000),       //     (terminated)
		.mac_read_8         (),                                           //     (terminated)
		.mac_writedata_8    (),                                           //     (terminated)
		.mac_write_8        (),                                           //     (terminated)
		.mac_waitrequest_8  (1'b0),                                       //     (terminated)
		.pcs_address_8      (),                                           //     (terminated)
		.pcs_readdata_8     (16'b0000000000000000),                       //     (terminated)
		.pcs_read_8         (),                                           //     (terminated)
		.pcs_writedata_8    (),                                           //     (terminated)
		.pcs_write_8        (),                                           //     (terminated)
		.pcs_waitrequest_8  (1'b0),                                       //     (terminated)
		.mac_address_9      (),                                           //     (terminated)
		.mac_readdata_9     (32'b00000000000000000000000000000000),       //     (terminated)
		.mac_read_9         (),                                           //     (terminated)
		.mac_writedata_9    (),                                           //     (terminated)
		.mac_write_9        (),                                           //     (terminated)
		.mac_waitrequest_9  (1'b0),                                       //     (terminated)
		.pcs_address_9      (),                                           //     (terminated)
		.pcs_readdata_9     (16'b0000000000000000),                       //     (terminated)
		.pcs_read_9         (),                                           //     (terminated)
		.pcs_writedata_9    (),                                           //     (terminated)
		.pcs_write_9        (),                                           //     (terminated)
		.pcs_waitrequest_9  (1'b0),                                       //     (terminated)
		.mac_address_10     (),                                           //     (terminated)
		.mac_readdata_10    (32'b00000000000000000000000000000000),       //     (terminated)
		.mac_read_10        (),                                           //     (terminated)
		.mac_writedata_10   (),                                           //     (terminated)
		.mac_write_10       (),                                           //     (terminated)
		.mac_waitrequest_10 (1'b0),                                       //     (terminated)
		.pcs_address_10     (),                                           //     (terminated)
		.pcs_readdata_10    (16'b0000000000000000),                       //     (terminated)
		.pcs_read_10        (),                                           //     (terminated)
		.pcs_writedata_10   (),                                           //     (terminated)
		.pcs_write_10       (),                                           //     (terminated)
		.pcs_waitrequest_10 (1'b0),                                       //     (terminated)
		.mac_address_11     (),                                           //     (terminated)
		.mac_readdata_11    (32'b00000000000000000000000000000000),       //     (terminated)
		.mac_read_11        (),                                           //     (terminated)
		.mac_writedata_11   (),                                           //     (terminated)
		.mac_write_11       (),                                           //     (terminated)
		.mac_waitrequest_11 (1'b0),                                       //     (terminated)
		.pcs_address_11     (),                                           //     (terminated)
		.pcs_readdata_11    (16'b0000000000000000),                       //     (terminated)
		.pcs_read_11        (),                                           //     (terminated)
		.pcs_writedata_11   (),                                           //     (terminated)
		.pcs_write_11       (),                                           //     (terminated)
		.pcs_waitrequest_11 (1'b0),                                       //     (terminated)
		.mac_address_12     (),                                           //     (terminated)
		.mac_readdata_12    (32'b00000000000000000000000000000000),       //     (terminated)
		.mac_read_12        (),                                           //     (terminated)
		.mac_writedata_12   (),                                           //     (terminated)
		.mac_write_12       (),                                           //     (terminated)
		.mac_waitrequest_12 (1'b0),                                       //     (terminated)
		.pcs_address_12     (),                                           //     (terminated)
		.pcs_readdata_12    (16'b0000000000000000),                       //     (terminated)
		.pcs_read_12        (),                                           //     (terminated)
		.pcs_writedata_12   (),                                           //     (terminated)
		.pcs_write_12       (),                                           //     (terminated)
		.pcs_waitrequest_12 (1'b0),                                       //     (terminated)
		.mac_address_13     (),                                           //     (terminated)
		.mac_readdata_13    (32'b00000000000000000000000000000000),       //     (terminated)
		.mac_read_13        (),                                           //     (terminated)
		.mac_writedata_13   (),                                           //     (terminated)
		.mac_write_13       (),                                           //     (terminated)
		.mac_waitrequest_13 (1'b0),                                       //     (terminated)
		.pcs_address_13     (),                                           //     (terminated)
		.pcs_readdata_13    (16'b0000000000000000),                       //     (terminated)
		.pcs_read_13        (),                                           //     (terminated)
		.pcs_writedata_13   (),                                           //     (terminated)
		.pcs_write_13       (),                                           //     (terminated)
		.pcs_waitrequest_13 (1'b0),                                       //     (terminated)
		.mac_address_14     (),                                           //     (terminated)
		.mac_readdata_14    (32'b00000000000000000000000000000000),       //     (terminated)
		.mac_read_14        (),                                           //     (terminated)
		.mac_writedata_14   (),                                           //     (terminated)
		.mac_write_14       (),                                           //     (terminated)
		.mac_waitrequest_14 (1'b0),                                       //     (terminated)
		.pcs_address_14     (),                                           //     (terminated)
		.pcs_readdata_14    (16'b0000000000000000),                       //     (terminated)
		.pcs_read_14        (),                                           //     (terminated)
		.pcs_writedata_14   (),                                           //     (terminated)
		.pcs_write_14       (),                                           //     (terminated)
		.pcs_waitrequest_14 (1'b0),                                       //     (terminated)
		.mac_address_15     (),                                           //     (terminated)
		.mac_readdata_15    (32'b00000000000000000000000000000000),       //     (terminated)
		.mac_read_15        (),                                           //     (terminated)
		.mac_writedata_15   (),                                           //     (terminated)
		.mac_write_15       (),                                           //     (terminated)
		.mac_waitrequest_15 (1'b0),                                       //     (terminated)
		.pcs_address_15     (),                                           //     (terminated)
		.pcs_readdata_15    (16'b0000000000000000),                       //     (terminated)
		.pcs_read_15        (),                                           //     (terminated)
		.pcs_writedata_15   (),                                           //     (terminated)
		.pcs_write_15       (),                                           //     (terminated)
		.pcs_waitrequest_15 (1'b0),                                       //     (terminated)
		.mac_address_16     (),                                           //     (terminated)
		.mac_readdata_16    (32'b00000000000000000000000000000000),       //     (terminated)
		.mac_read_16        (),                                           //     (terminated)
		.mac_writedata_16   (),                                           //     (terminated)
		.mac_write_16       (),                                           //     (terminated)
		.mac_waitrequest_16 (1'b0),                                       //     (terminated)
		.pcs_address_16     (),                                           //     (terminated)
		.pcs_readdata_16    (16'b0000000000000000),                       //     (terminated)
		.pcs_read_16        (),                                           //     (terminated)
		.pcs_writedata_16   (),                                           //     (terminated)
		.pcs_write_16       (),                                           //     (terminated)
		.pcs_waitrequest_16 (1'b0),                                       //     (terminated)
		.mac_address_17     (),                                           //     (terminated)
		.mac_readdata_17    (32'b00000000000000000000000000000000),       //     (terminated)
		.mac_read_17        (),                                           //     (terminated)
		.mac_writedata_17   (),                                           //     (terminated)
		.mac_write_17       (),                                           //     (terminated)
		.mac_waitrequest_17 (1'b0),                                       //     (terminated)
		.pcs_address_17     (),                                           //     (terminated)
		.pcs_readdata_17    (16'b0000000000000000),                       //     (terminated)
		.pcs_read_17        (),                                           //     (terminated)
		.pcs_writedata_17   (),                                           //     (terminated)
		.pcs_write_17       (),                                           //     (terminated)
		.pcs_waitrequest_17 (1'b0),                                       //     (terminated)
		.mac_address_18     (),                                           //     (terminated)
		.mac_readdata_18    (32'b00000000000000000000000000000000),       //     (terminated)
		.mac_read_18        (),                                           //     (terminated)
		.mac_writedata_18   (),                                           //     (terminated)
		.mac_write_18       (),                                           //     (terminated)
		.mac_waitrequest_18 (1'b0),                                       //     (terminated)
		.pcs_address_18     (),                                           //     (terminated)
		.pcs_readdata_18    (16'b0000000000000000),                       //     (terminated)
		.pcs_read_18        (),                                           //     (terminated)
		.pcs_writedata_18   (),                                           //     (terminated)
		.pcs_write_18       (),                                           //     (terminated)
		.pcs_waitrequest_18 (1'b0),                                       //     (terminated)
		.mac_address_19     (),                                           //     (terminated)
		.mac_readdata_19    (32'b00000000000000000000000000000000),       //     (terminated)
		.mac_read_19        (),                                           //     (terminated)
		.mac_writedata_19   (),                                           //     (terminated)
		.mac_write_19       (),                                           //     (terminated)
		.mac_waitrequest_19 (1'b0),                                       //     (terminated)
		.pcs_address_19     (),                                           //     (terminated)
		.pcs_readdata_19    (16'b0000000000000000),                       //     (terminated)
		.pcs_read_19        (),                                           //     (terminated)
		.pcs_writedata_19   (),                                           //     (terminated)
		.pcs_write_19       (),                                           //     (terminated)
		.pcs_waitrequest_19 (1'b0),                                       //     (terminated)
		.mac_address_20     (),                                           //     (terminated)
		.mac_readdata_20    (32'b00000000000000000000000000000000),       //     (terminated)
		.mac_read_20        (),                                           //     (terminated)
		.mac_writedata_20   (),                                           //     (terminated)
		.mac_write_20       (),                                           //     (terminated)
		.mac_waitrequest_20 (1'b0),                                       //     (terminated)
		.pcs_address_20     (),                                           //     (terminated)
		.pcs_readdata_20    (16'b0000000000000000),                       //     (terminated)
		.pcs_read_20        (),                                           //     (terminated)
		.pcs_writedata_20   (),                                           //     (terminated)
		.pcs_write_20       (),                                           //     (terminated)
		.pcs_waitrequest_20 (1'b0),                                       //     (terminated)
		.mac_address_21     (),                                           //     (terminated)
		.mac_readdata_21    (32'b00000000000000000000000000000000),       //     (terminated)
		.mac_read_21        (),                                           //     (terminated)
		.mac_writedata_21   (),                                           //     (terminated)
		.mac_write_21       (),                                           //     (terminated)
		.mac_waitrequest_21 (1'b0),                                       //     (terminated)
		.pcs_address_21     (),                                           //     (terminated)
		.pcs_readdata_21    (16'b0000000000000000),                       //     (terminated)
		.pcs_read_21        (),                                           //     (terminated)
		.pcs_writedata_21   (),                                           //     (terminated)
		.pcs_write_21       (),                                           //     (terminated)
		.pcs_waitrequest_21 (1'b0),                                       //     (terminated)
		.mac_address_22     (),                                           //     (terminated)
		.mac_readdata_22    (32'b00000000000000000000000000000000),       //     (terminated)
		.mac_read_22        (),                                           //     (terminated)
		.mac_writedata_22   (),                                           //     (terminated)
		.mac_write_22       (),                                           //     (terminated)
		.mac_waitrequest_22 (1'b0),                                       //     (terminated)
		.pcs_address_22     (),                                           //     (terminated)
		.pcs_readdata_22    (16'b0000000000000000),                       //     (terminated)
		.pcs_read_22        (),                                           //     (terminated)
		.pcs_writedata_22   (),                                           //     (terminated)
		.pcs_write_22       (),                                           //     (terminated)
		.pcs_waitrequest_22 (1'b0),                                       //     (terminated)
		.mac_address_23     (),                                           //     (terminated)
		.mac_readdata_23    (32'b00000000000000000000000000000000),       //     (terminated)
		.mac_read_23        (),                                           //     (terminated)
		.mac_writedata_23   (),                                           //     (terminated)
		.mac_write_23       (),                                           //     (terminated)
		.mac_waitrequest_23 (1'b0),                                       //     (terminated)
		.pcs_address_23     (),                                           //     (terminated)
		.pcs_readdata_23    (16'b0000000000000000),                       //     (terminated)
		.pcs_read_23        (),                                           //     (terminated)
		.pcs_writedata_23   (),                                           //     (terminated)
		.pcs_write_23       (),                                           //     (terminated)
		.pcs_waitrequest_23 (1'b0)                                        //     (terminated)
	);

	altera_eth_tse_channel_adapter #(
		.MAX_CHANNELS  (1),
		.CHANNEL_WIDTH (1)
	) channel_adapter (
		.clk                   (rx_afull_clk),                        //           clk.clk
		.reset                 (rst_controller_reset_out_reset),      //         reset.reset
		.rx_afull_data         (rx_afull_data),                       //    channel_in.data
		.rx_afull_valid        (rx_afull_valid),                      //              .valid
		.rx_afull_channel      (rx_afull_channel),                    //              .channel
		.rx_afull_data_out_0   (channel_adapter_channel_out_0_data),  // channel_out_0.data
		.rx_afull_valid_out_0  (channel_adapter_channel_out_0_valid), //              .valid
		.rx_afull_data_out_1   (),                                    //   (terminated)
		.rx_afull_valid_out_1  (),                                    //   (terminated)
		.rx_afull_data_out_2   (),                                    //   (terminated)
		.rx_afull_valid_out_2  (),                                    //   (terminated)
		.rx_afull_data_out_3   (),                                    //   (terminated)
		.rx_afull_valid_out_3  (),                                    //   (terminated)
		.rx_afull_data_out_4   (),                                    //   (terminated)
		.rx_afull_valid_out_4  (),                                    //   (terminated)
		.rx_afull_data_out_5   (),                                    //   (terminated)
		.rx_afull_valid_out_5  (),                                    //   (terminated)
		.rx_afull_data_out_6   (),                                    //   (terminated)
		.rx_afull_valid_out_6  (),                                    //   (terminated)
		.rx_afull_data_out_7   (),                                    //   (terminated)
		.rx_afull_valid_out_7  (),                                    //   (terminated)
		.rx_afull_data_out_8   (),                                    //   (terminated)
		.rx_afull_valid_out_8  (),                                    //   (terminated)
		.rx_afull_data_out_9   (),                                    //   (terminated)
		.rx_afull_valid_out_9  (),                                    //   (terminated)
		.rx_afull_data_out_10  (),                                    //   (terminated)
		.rx_afull_valid_out_10 (),                                    //   (terminated)
		.rx_afull_data_out_11  (),                                    //   (terminated)
		.rx_afull_valid_out_11 (),                                    //   (terminated)
		.rx_afull_data_out_12  (),                                    //   (terminated)
		.rx_afull_valid_out_12 (),                                    //   (terminated)
		.rx_afull_data_out_13  (),                                    //   (terminated)
		.rx_afull_valid_out_13 (),                                    //   (terminated)
		.rx_afull_data_out_14  (),                                    //   (terminated)
		.rx_afull_valid_out_14 (),                                    //   (terminated)
		.rx_afull_data_out_15  (),                                    //   (terminated)
		.rx_afull_valid_out_15 (),                                    //   (terminated)
		.rx_afull_data_out_16  (),                                    //   (terminated)
		.rx_afull_valid_out_16 (),                                    //   (terminated)
		.rx_afull_data_out_17  (),                                    //   (terminated)
		.rx_afull_valid_out_17 (),                                    //   (terminated)
		.rx_afull_data_out_18  (),                                    //   (terminated)
		.rx_afull_valid_out_18 (),                                    //   (terminated)
		.rx_afull_data_out_19  (),                                    //   (terminated)
		.rx_afull_valid_out_19 (),                                    //   (terminated)
		.rx_afull_data_out_20  (),                                    //   (terminated)
		.rx_afull_valid_out_20 (),                                    //   (terminated)
		.rx_afull_data_out_21  (),                                    //   (terminated)
		.rx_afull_valid_out_21 (),                                    //   (terminated)
		.rx_afull_data_out_22  (),                                    //   (terminated)
		.rx_afull_valid_out_22 (),                                    //   (terminated)
		.rx_afull_data_out_23  (),                                    //   (terminated)
		.rx_afull_valid_out_23 ()                                     //   (terminated)
	);

	altera_eth_tse_fifoless_mac #(
		.ENABLE_MAC_RX_VLAN       (0),
		.ENABLE_SUP_ADDR          (0),
		.DEVICE_FAMILY            ("CYCLONEIII"),
		.CRC32DWIDTH              (8),
		.SYNCHRONIZER_DEPTH       (3),
		.ENABLE_MAC_TX_VLAN       (0),
		.RESET_LEVEL              (1),
		.STAT_CNT_ENA             (0),
		.CUST_VERSION             (0),
		.CRC32S1L2_EXTERN         (0),
		.MBIT_ONLY                (1),
		.ENABLE_PTP_1STEP         (0),
		.CORE_VERSION             (3329),
		.CRC32GENDELAY            (6),
		.FINGERPRINT_WIDTH        (4),
		.ENABLE_REG_SHARING       (0),
		.REDUCED_INTERFACE_ENA    (0),
		.ENABLE_MAGIC_DETECT      (0),
		.ENABLE_MDIO              (1),
		.ENABLE_TIMESTAMPING      (0),
		.ENABLE_MAC_TXADDR_SET    (1),
		.CRC32CHECK16BIT          (0),
		.MAC_ONLY                 (1),
		.ENABLE_LGTH_CHECK        (1),
		.ENABLE_MAC_FLOW_CTRL     (0),
		.ENABLE_SHIFT16           (0),
		.USE_SYNC_RESET           (1),
		.REDUCED_CONTROL          (0),
		.MDIO_CLK_DIV             (40),
		.ENABLE_PADDING           (1),
		.ENABLE_GMII_LOOPBACK     (0),
		.GBIT_ONLY                (1),
		.ENA_HASH                 (0),
		.ENABLE_EXTENDED_STAT_REG (0),
		.ENABLE_HD_LOGIC          (0)
	) i_tse_fifoless_mac_0 (
		.reg_clk                                        (clk),                                                                                                  //        control_port_clock_connection.clk
		.reset                                          (reset),                                                                                                //                     reset_connection.reset
		.reg_addr                                       (avalon_arbiter_av_mac_master_0_address),                                                               //                         control_port.address
		.reg_data_out                                   (avalon_arbiter_av_mac_master_0_readdata),                                                              //                                     .readdata
		.reg_rd                                         (avalon_arbiter_av_mac_master_0_read),                                                                  //                                     .read
		.reg_data_in                                    (avalon_arbiter_av_mac_master_0_writedata),                                                             //                                     .writedata
		.reg_wr                                         (avalon_arbiter_av_mac_master_0_write),                                                                 //                                     .write
		.reg_busy                                       (avalon_arbiter_av_mac_master_0_waitrequest),                                                           //                                     .waitrequest
		.mac_rx_clk                                     (mac_rx_clk_0),                                                                                         //              mac_rx_clock_connection.clk
		.mac_tx_clk                                     (mac_tx_clk_0),                                                                                         //              mac_tx_clock_connection.clk
		.data_rx_data                                   (data_rx_data_0),                                                                                       //                              receive.data
		.data_rx_eop                                    (data_rx_eop_0),                                                                                        //                                     .endofpacket
		.data_rx_error                                  (data_rx_error_0),                                                                                      //                                     .error
		.data_rx_ready                                  (data_rx_ready_0),                                                                                      //                                     .ready
		.data_rx_sop                                    (data_rx_sop_0),                                                                                        //                                     .startofpacket
		.data_rx_valid                                  (data_rx_valid_0),                                                                                      //                                     .valid
		.data_tx_data                                   (data_tx_data_0),                                                                                       //                             transmit.data
		.data_tx_eop                                    (data_tx_eop_0),                                                                                        //                                     .endofpacket
		.data_tx_error                                  (data_tx_error_0),                                                                                      //                                     .error
		.data_tx_ready                                  (data_tx_ready_0),                                                                                      //                                     .ready
		.data_tx_sop                                    (data_tx_sop_0),                                                                                        //                                     .startofpacket
		.data_tx_valid                                  (data_tx_valid_0),                                                                                      //                                     .valid
		.rx_afull_clk                                   (rx_afull_clk),                                                                                         // receive_fifo_status_clock_connection.clk
		.rx_afull_data                                  (channel_adapter_channel_out_0_data),                                                                   //                  receive_fifo_status.data
		.rx_afull_valid                                 (channel_adapter_channel_out_0_valid),                                                                  //                                     .valid
		.pkt_class_data                                 (pkt_class_data_0),                                                                                     //                  receive_packet_type.data
		.pkt_class_valid                                (pkt_class_valid_0),                                                                                    //                                     .valid
		.tx_crc_fwd                                     (tx_crc_fwd_0),                                                                                         //                  mac_misc_connection.export
		.mdc                                            (mdc),                                                                                                  //                  mac_mdio_connection.mdc
		.mdio_in                                        (mdio_in),                                                                                              //                                     .mdio_in
		.mdio_out                                       (mdio_out),                                                                                             //                                     .mdio_out
		.mdio_oen                                       (mdio_oen),                                                                                             //                                     .mdio_oen
		.gm_rx_d                                        (gm_rx_d_0),                                                                                            //                  mac_gmii_connection.gmii_rx_d
		.gm_rx_dv                                       (gm_rx_dv_0),                                                                                           //                                     .gmii_rx_dv
		.gm_rx_err                                      (gm_rx_err_0),                                                                                          //                                     .gmii_rx_err
		.gm_tx_d                                        (gm_tx_d_0),                                                                                            //                                     .gmii_tx_d
		.gm_tx_en                                       (gm_tx_en_0),                                                                                           //                                     .gmii_tx_en
		.gm_tx_err                                      (gm_tx_err_0),                                                                                          //                                     .gmii_tx_err
		.m_rx_d                                         (m_rx_d_0),                                                                                             //                   mac_mii_connection.mii_rx_d
		.m_rx_en                                        (m_rx_en_0),                                                                                            //                                     .mii_rx_dv
		.m_rx_err                                       (m_rx_err_0),                                                                                           //                                     .mii_rx_err
		.m_tx_d                                         (m_tx_d_0),                                                                                             //                                     .mii_tx_d
		.m_tx_en                                        (m_tx_en_0),                                                                                            //                                     .mii_tx_en
		.m_tx_err                                       (m_tx_err_0),                                                                                           //                                     .mii_tx_err
		.set_10                                         (set_10_0),                                                                                             //                mac_status_connection.set_10
		.set_1000                                       (set_1000_0),                                                                                           //                                     .set_1000
		.eth_mode                                       (eth_mode_0),                                                                                           //                                     .eth_mode
		.ena_10                                         (ena_10_0),                                                                                             //                                     .ena_10
		.tx_clk                                         (tx_clk_0),                                                                                             //          pcs_mac_tx_clock_connection.clk
		.rx_clk                                         (rx_clk_0),                                                                                             //          pcs_mac_rx_clock_connection.clk
		.magic_sleep_n                                  (1'b1),                                                                                                 //                          (terminated)
		.rx_clkena                                      (1'b1),                                                                                                 //                          (terminated)
		.tx_clkena                                      (1'b1),                                                                                                 //                          (terminated)
		.xon_gen                                        (1'b0),                                                                                                 //                          (terminated)
		.xoff_gen                                       (1'b0),                                                                                                 //                          (terminated)
		.magic_wakeup                                   (),                                                                                                     //                          (terminated)
		.tx_ff_uflow                                    (),                                                                                                     //                          (terminated)
		.pause_quant_out                                (),                                                                                                     //                          (terminated)
		.frm_length_max_out                             (),                                                                                                     //                          (terminated)
		.tx_ipg_len_out                                 (),                                                                                                     //                          (terminated)
		.pause_quant_in                                 (16'b0000000000000000),                                                                                 //                          (terminated)
		.frm_length_max_in                              (16'b0000000000000000),                                                                                 //                          (terminated)
		.tx_ipg_len_in                                  (5'b00000),                                                                                             //                          (terminated)
		.rgmii_out1_aclr                                (),                                                                                                     //                          (terminated)
		.rgmii_in1_dout                                 (2'b00),                                                                                                //                          (terminated)
		.rgmii_out1_din                                 (),                                                                                                     //                          (terminated)
		.rgmii_out1_oe                                  (),                                                                                                     //                          (terminated)
		.rgmii_in1_ck                                   (),                                                                                                     //                          (terminated)
		.rgmii_out4_din                                 (),                                                                                                     //                          (terminated)
		.rgmii_out4_ck                                  (),                                                                                                     //                          (terminated)
		.rgmii_in1_pad                                  (),                                                                                                     //                          (terminated)
		.rgmii_out4_aclr                                (),                                                                                                     //                          (terminated)
		.rgmii_out1_pad                                 (1'b0),                                                                                                 //                          (terminated)
		.rgmii_out1_ck                                  (),                                                                                                     //                          (terminated)
		.rgmii_in4_dout                                 (8'b00000000),                                                                                          //                          (terminated)
		.rgmii_out4_oe                                  (),                                                                                                     //                          (terminated)
		.rgmii_in4_pad                                  (),                                                                                                     //                          (terminated)
		.rgmii_in4_ck                                   (),                                                                                                     //                          (terminated)
		.rgmii_out4_pad                                 (4'b0000),                                                                                              //                          (terminated)
		.rgmii_in                                       (4'b0000),                                                                                              //                          (terminated)
		.rgmii_out                                      (),                                                                                                     //                          (terminated)
		.rx_control                                     (1'b0),                                                                                                 //                          (terminated)
		.tx_control                                     (),                                                                                                     //                          (terminated)
		.m_rx_crs                                       (1'b0),                                                                                                 //                          (terminated)
		.m_rx_col                                       (1'b0),                                                                                                 //                          (terminated)
		.tx_egress_timestamp_request_valid              (1'b0),                                                                                                 //                          (terminated)
		.tx_egress_timestamp_request_fingerprint        (4'b0000),                                                                                              //                          (terminated)
		.tx_etstamp_ins_ctrl_timestamp_insert           (1'b0),                                                                                                 //                          (terminated)
		.tx_etstamp_ins_ctrl_residence_time_update      (1'b0),                                                                                                 //                          (terminated)
		.tx_etstamp_ins_ctrl_checksum_zero              (1'b0),                                                                                                 //                          (terminated)
		.tx_etstamp_ins_ctrl_checksum_correct           (1'b0),                                                                                                 //                          (terminated)
		.tx_etstamp_ins_ctrl_residence_time_calc_format (1'b0),                                                                                                 //                          (terminated)
		.tx_etstamp_ins_ctrl_timestamp_format           (1'b0),                                                                                                 //                          (terminated)
		.tx_etstamp_ins_ctrl_offset_timestamp           (16'b0000000000000000),                                                                                 //                          (terminated)
		.tx_etstamp_ins_ctrl_offset_correction_field    (16'b0000000000000000),                                                                                 //                          (terminated)
		.tx_etstamp_ins_ctrl_offset_checksum_field      (16'b0000000000000000),                                                                                 //                          (terminated)
		.tx_etstamp_ins_ctrl_offset_checksum_correction (16'b0000000000000000),                                                                                 //                          (terminated)
		.tx_etstamp_ins_ctrl_ingress_timestamp_96b      (96'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000), //                          (terminated)
		.tx_etstamp_ins_ctrl_ingress_timestamp_64b      (64'b0000000000000000000000000000000000000000000000000000000000000000),                                 //                          (terminated)
		.tx_path_delay_data                             (22'b0000000000000000000000),                                                                           //                          (terminated)
		.rx_path_delay_data                             (22'b0000000000000000000000),                                                                           //                          (terminated)
		.tx_time_of_day_96b_data                        (96'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000), //                          (terminated)
		.tx_time_of_day_64b_data                        (64'b0000000000000000000000000000000000000000000000000000000000000000),                                 //                          (terminated)
		.rx_time_of_day_96b_data                        (96'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000), //                          (terminated)
		.rx_time_of_day_64b_data                        (64'b0000000000000000000000000000000000000000000000000000000000000000),                                 //                          (terminated)
		.tx_egress_timestamp_96b_valid                  (),                                                                                                     //                          (terminated)
		.tx_egress_timestamp_96b_data                   (),                                                                                                     //                          (terminated)
		.tx_egress_timestamp_96b_fingerprint            (),                                                                                                     //                          (terminated)
		.tx_egress_timestamp_64b_valid                  (),                                                                                                     //                          (terminated)
		.tx_egress_timestamp_64b_data                   (),                                                                                                     //                          (terminated)
		.tx_egress_timestamp_64b_fingerprint            (),                                                                                                     //                          (terminated)
		.rx_ingress_timestamp_96b_valid                 (),                                                                                                     //                          (terminated)
		.rx_ingress_timestamp_96b_data                  (),                                                                                                     //                          (terminated)
		.rx_ingress_timestamp_64b_valid                 (),                                                                                                     //                          (terminated)
		.rx_ingress_timestamp_64b_data                  ()                                                                                                      //                          (terminated)
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (1),
		.OUTPUT_RESET_SYNC_EDGES   ("deassert"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller (
		.reset_in0      (reset),                          // reset_in0.reset
		.clk            (rx_afull_clk),                   //       clk.clk
		.reset_out      (rst_controller_reset_out_reset), // reset_out.reset
		.reset_req      (),                               // (terminated)
		.reset_req_in0  (1'b0),                           // (terminated)
		.reset_in1      (1'b0),                           // (terminated)
		.reset_req_in1  (1'b0),                           // (terminated)
		.reset_in2      (1'b0),                           // (terminated)
		.reset_req_in2  (1'b0),                           // (terminated)
		.reset_in3      (1'b0),                           // (terminated)
		.reset_req_in3  (1'b0),                           // (terminated)
		.reset_in4      (1'b0),                           // (terminated)
		.reset_req_in4  (1'b0),                           // (terminated)
		.reset_in5      (1'b0),                           // (terminated)
		.reset_req_in5  (1'b0),                           // (terminated)
		.reset_in6      (1'b0),                           // (terminated)
		.reset_req_in6  (1'b0),                           // (terminated)
		.reset_in7      (1'b0),                           // (terminated)
		.reset_req_in7  (1'b0),                           // (terminated)
		.reset_in8      (1'b0),                           // (terminated)
		.reset_req_in8  (1'b0),                           // (terminated)
		.reset_in9      (1'b0),                           // (terminated)
		.reset_req_in9  (1'b0),                           // (terminated)
		.reset_in10     (1'b0),                           // (terminated)
		.reset_req_in10 (1'b0),                           // (terminated)
		.reset_in11     (1'b0),                           // (terminated)
		.reset_req_in11 (1'b0),                           // (terminated)
		.reset_in12     (1'b0),                           // (terminated)
		.reset_req_in12 (1'b0),                           // (terminated)
		.reset_in13     (1'b0),                           // (terminated)
		.reset_req_in13 (1'b0),                           // (terminated)
		.reset_in14     (1'b0),                           // (terminated)
		.reset_req_in14 (1'b0),                           // (terminated)
		.reset_in15     (1'b0),                           // (terminated)
		.reset_req_in15 (1'b0)                            // (terminated)
	);

endmodule
